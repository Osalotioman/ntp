name: Clean Up Empty Sections  # Name of the GitHub Actions workflow

on:
  issues:  # Trigger the workflow when an issue event occurs
    types: [opened]  # Only trigger when a new issue is created

jobs:
  clean-issue:  # Define a job named 'clean-issue'
    runs-on: ubuntu-latest  # The job will run on the latest Ubuntu runner

    steps:
    - name: Remove Empty Sections  # Name of this step for clarity
      env:  # Set environment variables
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token for authentication (auto-provided by GitHub)
        ISSUE_NUMBER: ${{ github.event.issue.number }}  # The number of the issue that triggered the workflow
        REPO: ${{ github.repository }}  # The repository where the issue was created
      run: |
        # Get the issue body using GitHub API
        BODY=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \  # Make an API request to fetch the issue details
          "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER" | jq -r '.body')  # Extract the issue body using jq

        # Function to remove empty sections based on specific patterns
        clean_section() {
          LABEL="$1"
          BODY=$(echo "$BODY" | sed -E "/^### $LABEL$/,/^### /{/^```(bash)?\s*```$/d; /^_No response_$/d; /^### $LABEL$/d}" | sed '/^### '"$LABEL"'$/,$d')
        }

        # Check and clean specific sections
        for SECTION in "Screenshots" "Logs" "Browsers" "OS"; do
          if echo "$BODY" | grep -q "### $SECTION"; then
            CONTENT=$(echo "$BODY" | sed -n "/^### $SECTION$/,/^### /p" | tail -n +2 | grep -v '^###')

            # Remove sections with empty code blocks or '_No response_'
            if echo "$CONTENT" | grep -Eq '^```(bash)?\s*```$' || echo "$CONTENT" | grep -q '^_No response_$'; then
              clean_section "$SECTION"
            fi
          fi
        done

        # Update the issue with the cleaned body using GitHub API
        curl -s -X PATCH -H "Authorization: token $GITHUB_TOKEN" \
          -d "{\"body\": $(jq -R -s <<<"$BODY")}" \
          "https://api.github.com/repos/$REPO/issues/$ISSUE_NUMBER"
